//
// Generated by NVIDIA NVVM Compiler
//
// Compiler Build ID: CL-23083092
// Cuda compilation tools, release 9.1, V9.1.85
// Based on LLVM 3.4svn
//

.version 6.1
.target sm_30
.address_size 64

	// .globl	_Z6oxMainv
.global .align 8 .b8 pixelID[8];
.global .align 8 .b8 resolution[8];
.global .align 4 .b8 normal[12];
.global .align 4 .b8 camPos[12];
.global .align 4 .b8 root[4];
.global .align 4 .u32 imageEnabled;
.global .texref lightmap;
.global .align 16 .b8 tileInfo[16];
.global .align 4 .u32 additive;
.global .align 1 .b8 image[1];
.global .align 1 .b8 image_HDR[1];
.global .align 1 .b8 image_HDR2[1];
.global .align 1 .b8 image_Mask[1];
.global .align 1 .b8 image_Dir[1];
.global .align 1 .b8 uvpos[1];
.global .align 1 .b8 uvnormal[1];
.global .align 4 .u32 samples;
.global .align 4 .f32 lightInvCutoff;
.global .align 4 .f32 lightRadius;
.global .align 4 .b8 lightPos[12];
.global .align 4 .b8 lightColor[12];
.global .align 4 .u32 ignoreNormal;
.global .align 4 .f32 lightFalloffFakeDistanceMult;
.global .align 4 .b8 _ZN21rti_internal_typeinfo7pixelIDE[8] = {82, 97, 121, 0, 8, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo10resolutionE[8] = {82, 97, 121, 0, 8, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo6normalE[8] = {82, 97, 121, 0, 12, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo6camPosE[8] = {82, 97, 121, 0, 12, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo4rootE[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo12imageEnabledE[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo8tileInfoE[8] = {82, 97, 121, 0, 16, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo8additiveE[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo7samplesE[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo14lightInvCutoffE[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo11lightRadiusE[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo8lightPosE[8] = {82, 97, 121, 0, 12, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo10lightColorE[8] = {82, 97, 121, 0, 12, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo12ignoreNormalE[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo28lightFalloffFakeDistanceMultE[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.global .align 8 .u64 _ZN21rti_internal_register20reg_bitness_detectorE;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail0E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail1E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail2E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail3E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail4E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail5E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail6E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail7E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail8E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail9E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail0E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail1E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail2E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail3E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail4E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail5E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail6E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail7E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail8E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail9E;
.global .align 4 .u32 _ZN21rti_internal_register14reg_rayIndex_xE;
.global .align 4 .u32 _ZN21rti_internal_register14reg_rayIndex_yE;
.global .align 4 .u32 _ZN21rti_internal_register14reg_rayIndex_zE;
.global .align 8 .b8 _ZN21rti_internal_typename7pixelIDE[6] = {117, 105, 110, 116, 50, 0};
.global .align 8 .b8 _ZN21rti_internal_typename10resolutionE[6] = {117, 105, 110, 116, 50, 0};
.global .align 8 .b8 _ZN21rti_internal_typename6normalE[7] = {102, 108, 111, 97, 116, 51, 0};
.global .align 8 .b8 _ZN21rti_internal_typename6camPosE[7] = {102, 108, 111, 97, 116, 51, 0};
.global .align 16 .b8 _ZN21rti_internal_typename4rootE[9] = {114, 116, 79, 98, 106, 101, 99, 116, 0};
.global .align 4 .b8 _ZN21rti_internal_typename12imageEnabledE[4] = {105, 110, 116, 0};
.global .align 8 .b8 _ZN21rti_internal_typename8tileInfoE[6] = {117, 105, 110, 116, 52, 0};
.global .align 4 .b8 _ZN21rti_internal_typename8additiveE[4] = {105, 110, 116, 0};
.global .align 4 .b8 _ZN21rti_internal_typename7samplesE[4] = {105, 110, 116, 0};
.global .align 8 .b8 _ZN21rti_internal_typename14lightInvCutoffE[6] = {102, 108, 111, 97, 116, 0};
.global .align 8 .b8 _ZN21rti_internal_typename11lightRadiusE[6] = {102, 108, 111, 97, 116, 0};
.global .align 8 .b8 _ZN21rti_internal_typename8lightPosE[7] = {102, 108, 111, 97, 116, 51, 0};
.global .align 8 .b8 _ZN21rti_internal_typename10lightColorE[7] = {102, 108, 111, 97, 116, 51, 0};
.global .align 4 .b8 _ZN21rti_internal_typename12ignoreNormalE[4] = {105, 110, 116, 0};
.global .align 8 .b8 _ZN21rti_internal_typename28lightFalloffFakeDistanceMultE[6] = {102, 108, 111, 97, 116, 0};
.global .align 4 .u32 _ZN21rti_internal_typeenum7pixelIDE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum10resolutionE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum6normalE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum6camPosE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum4rootE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum12imageEnabledE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum8tileInfoE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum8additiveE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum7samplesE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum14lightInvCutoffE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum11lightRadiusE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum8lightPosE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum10lightColorE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum12ignoreNormalE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum28lightFalloffFakeDistanceMultE = 4919;
.global .align 16 .b8 _ZN21rti_internal_semantic7pixelIDE[14] = {114, 116, 76, 97, 117, 110, 99, 104, 73, 110, 100, 101, 120, 0};
.global .align 16 .b8 _ZN21rti_internal_semantic10resolutionE[12] = {114, 116, 76, 97, 117, 110, 99, 104, 68, 105, 109, 0};
.global .align 16 .b8 _ZN21rti_internal_semantic6normalE[17] = {97, 116, 116, 114, 105, 98, 117, 116, 101, 32, 110, 111, 114, 109, 97, 108, 0};
.global .align 1 .b8 _ZN21rti_internal_semantic6camPosE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic4rootE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic12imageEnabledE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic8tileInfoE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic8additiveE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic7samplesE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic14lightInvCutoffE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic11lightRadiusE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic8lightPosE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic10lightColorE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic12ignoreNormalE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic28lightFalloffFakeDistanceMultE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation7pixelIDE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation10resolutionE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation6normalE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation6camPosE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation4rootE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation12imageEnabledE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation8tileInfoE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation8additiveE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation7samplesE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation14lightInvCutoffE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation11lightRadiusE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation8lightPosE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation10lightColorE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation12ignoreNormalE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation28lightFalloffFakeDistanceMultE[1];

.visible .entry _Z6oxMainv(

)
{
	.local .align 4 .b8 	__local_depot0[4];
	.reg .b64 	%SP;
	.reg .b64 	%SPL;
	.reg .pred 	%p<112>;
	.reg .b16 	%rs<76>;
	.reg .f32 	%f<748>;
	.reg .b32 	%r<161>;
	.reg .b64 	%rd<150>;


	mov.u64 	%rd149, __local_depot0;
	cvta.local.u64 	%SP, %rd149;
	ld.global.v2.u32 	{%r26, %r27}, [pixelID];
	cvt.u64.u32	%rd12, %r26;
	cvt.u64.u32	%rd13, %r27;
	mov.u64 	%rd16, uvnormal;
	cvta.global.u64 	%rd11, %rd16;
	mov.u32 	%r24, 2;
	mov.u32 	%r25, 4;
	mov.u64 	%rd15, 0;
	// inline asm
	call (%rd10), _rt_buffer_get_64, (%rd11, %r24, %r25, %rd12, %rd13, %rd15, %rd15);
	// inline asm
	ld.u32 	%r1, [%rd10];
	shr.u32 	%r30, %r1, 16;
	cvt.u16.u32	%rs1, %r30;
	and.b16  	%rs4, %rs1, 255;
	cvt.u16.u32	%rs5, %r1;
	or.b16  	%rs6, %rs5, %rs4;
	setp.eq.s16	%p6, %rs6, 0;
	mov.f32 	%f724, 0f00000000;
	mov.f32 	%f725, %f724;
	mov.f32 	%f726, %f724;
	@%p6 bra 	BB0_2;

	ld.u8 	%rs7, [%rd10+1];
	and.b16  	%rs9, %rs5, 255;
	cvt.rn.f32.u16	%f105, %rs9;
	div.rn.f32 	%f106, %f105, 0f437F0000;
	fma.rn.f32 	%f107, %f106, 0f40000000, 0fBF800000;
	cvt.rn.f32.u16	%f108, %rs7;
	div.rn.f32 	%f109, %f108, 0f437F0000;
	fma.rn.f32 	%f110, %f109, 0f40000000, 0fBF800000;
	cvt.rn.f32.u16	%f111, %rs4;
	div.rn.f32 	%f112, %f111, 0f437F0000;
	fma.rn.f32 	%f113, %f112, 0f40000000, 0fBF800000;
	mul.f32 	%f114, %f110, %f110;
	fma.rn.f32 	%f115, %f107, %f107, %f114;
	fma.rn.f32 	%f116, %f113, %f113, %f115;
	sqrt.rn.f32 	%f117, %f116;
	rcp.rn.f32 	%f118, %f117;
	mul.f32 	%f724, %f107, %f118;
	mul.f32 	%f725, %f110, %f118;
	mul.f32 	%f726, %f113, %f118;

BB0_2:
	ld.global.v2.u32 	{%r31, %r32}, [pixelID];
	ld.global.v2.u32 	{%r34, %r35}, [tileInfo];
	add.s32 	%r2, %r31, %r34;
	add.s32 	%r3, %r32, %r35;
	setp.eq.f32	%p7, %f725, 0f00000000;
	setp.eq.f32	%p8, %f724, 0f00000000;
	and.pred  	%p9, %p8, %p7;
	setp.eq.f32	%p10, %f726, 0f00000000;
	and.pred  	%p11, %p9, %p10;
	@%p11 bra 	BB0_85;
	bra.uni 	BB0_3;

BB0_85:
	ld.global.u32 	%r160, [imageEnabled];
	and.b32  	%r136, %r160, 1;
	setp.eq.b32	%p107, %r136, 1;
	@!%p107 bra 	BB0_87;
	bra.uni 	BB0_86;

BB0_86:
	cvt.u64.u32	%rd110, %r2;
	cvt.u64.u32	%rd111, %r3;
	mov.u64 	%rd114, image;
	cvta.global.u64 	%rd109, %rd114;
	// inline asm
	call (%rd108), _rt_buffer_get_64, (%rd109, %r24, %r25, %rd110, %rd111, %rd15, %rd15);
	// inline asm
	mov.u16 	%rs57, 0;
	st.v4.u8 	[%rd108], {%rs57, %rs57, %rs57, %rs57};
	ld.global.u32 	%r160, [imageEnabled];

BB0_87:
	and.b32  	%r139, %r160, 8;
	setp.eq.s32	%p108, %r139, 0;
	@%p108 bra 	BB0_89;

	cvt.u64.u32	%rd117, %r2;
	cvt.u64.u32	%rd118, %r3;
	mov.u64 	%rd121, image_Mask;
	cvta.global.u64 	%rd116, %rd121;
	// inline asm
	call (%rd115), _rt_buffer_get_64, (%rd116, %r24, %r24, %rd117, %rd118, %rd15, %rd15);
	// inline asm
	mov.f32 	%f665, 0f00000000;
	cvt.rzi.u32.f32	%r142, %f665;
	cvt.u16.u32	%rs58, %r142;
	mov.u16 	%rs59, 0;
	st.v2.u8 	[%rd115], {%rs58, %rs59};
	ld.global.u32 	%r160, [imageEnabled];

BB0_89:
	and.b32  	%r143, %r160, 4;
	setp.eq.s32	%p109, %r143, 0;
	@%p109 bra 	BB0_93;

	ld.global.u32 	%r144, [additive];
	setp.eq.s32	%p110, %r144, 0;
	cvt.u64.u32	%rd8, %r2;
	cvt.u64.u32	%rd9, %r3;
	@%p110 bra 	BB0_92;

	mov.u64 	%rd134, image_HDR;
	cvta.global.u64 	%rd123, %rd134;
	mov.u32 	%r148, 8;
	// inline asm
	call (%rd122), _rt_buffer_get_64, (%rd123, %r24, %r148, %rd8, %rd9, %rd15, %rd15);
	// inline asm
	ld.v4.u16 	{%rs66, %rs67, %rs68, %rs69}, [%rd122];
	// inline asm
	{  cvt.f32.f16 %f666, %rs66;}

	// inline asm
	// inline asm
	{  cvt.f32.f16 %f667, %rs67;}

	// inline asm
	// inline asm
	{  cvt.f32.f16 %f668, %rs68;}

	// inline asm
	// inline asm
	call (%rd128), _rt_buffer_get_64, (%rd123, %r24, %r148, %rd8, %rd9, %rd15, %rd15);
	// inline asm
	add.f32 	%f669, %f666, 0f00000000;
	add.f32 	%f670, %f667, 0f00000000;
	add.f32 	%f671, %f668, 0f00000000;
	// inline asm
	{  cvt.rn.f16.f32 %rs65, %f671;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs64, %f670;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs63, %f669;}

	// inline asm
	mov.u16 	%rs70, 0;
	st.v4.u16 	[%rd128], {%rs63, %rs64, %rs65, %rs70};
	bra.uni 	BB0_93;

BB0_3:
	ld.global.v2.u32 	{%r41, %r42}, [pixelID];
	cvt.u64.u32	%rd19, %r41;
	cvt.u64.u32	%rd20, %r42;
	mov.u64 	%rd23, uvpos;
	cvta.global.u64 	%rd18, %rd23;
	mov.u32 	%r40, 12;
	// inline asm
	call (%rd17), _rt_buffer_get_64, (%rd18, %r24, %r40, %rd19, %rd20, %rd15, %rd15);
	// inline asm
	ld.global.f32 	%f7, [lightPos];
	ld.f32 	%f12, [%rd17+8];
	ld.f32 	%f10, [%rd17+4];
	ld.f32 	%f8, [%rd17];
	sub.f32 	%f121, %f7, %f8;
	ld.global.f32 	%f9, [lightPos+4];
	sub.f32 	%f122, %f9, %f10;
	ld.global.f32 	%f11, [lightPos+8];
	sub.f32 	%f123, %f11, %f12;
	mul.f32 	%f124, %f122, %f122;
	fma.rn.f32 	%f125, %f121, %f121, %f124;
	fma.rn.f32 	%f126, %f123, %f123, %f125;
	sqrt.rn.f32 	%f127, %f126;
	rcp.rn.f32 	%f128, %f127;
	ld.global.f32 	%f129, [lightFalloffFakeDistanceMult];
	mul.f32 	%f16, %f127, %f129;
	ld.global.f32 	%f130, [lightInvCutoff];
	mul.f32 	%f17, %f127, %f130;
	mov.f32 	%f134, 0f40800000;
	abs.f32 	%f19, %f17;
	setp.lt.f32	%p12, %f19, 0f00800000;
	mul.f32 	%f136, %f19, 0f4B800000;
	selp.f32	%f137, 0fC3170000, 0fC2FE0000, %p12;
	selp.f32	%f138, %f136, %f19, %p12;
	mov.b32 	 %r45, %f138;
	and.b32  	%r46, %r45, 8388607;
	or.b32  	%r47, %r46, 1065353216;
	mov.b32 	 %f139, %r47;
	shr.u32 	%r48, %r45, 23;
	cvt.rn.f32.u32	%f140, %r48;
	add.f32 	%f141, %f137, %f140;
	setp.gt.f32	%p13, %f139, 0f3FB504F3;
	mul.f32 	%f142, %f139, 0f3F000000;
	add.f32 	%f143, %f141, 0f3F800000;
	selp.f32	%f144, %f142, %f139, %p13;
	selp.f32	%f145, %f143, %f141, %p13;
	add.f32 	%f146, %f144, 0fBF800000;
	add.f32 	%f120, %f144, 0f3F800000;
	// inline asm
	rcp.approx.ftz.f32 %f119,%f120;
	// inline asm
	add.f32 	%f147, %f146, %f146;
	mul.f32 	%f148, %f119, %f147;
	mul.f32 	%f149, %f148, %f148;
	mov.f32 	%f150, 0f3C4CAF63;
	mov.f32 	%f151, 0f3B18F0FE;
	fma.rn.f32 	%f152, %f151, %f149, %f150;
	mov.f32 	%f153, 0f3DAAAABD;
	fma.rn.f32 	%f154, %f152, %f149, %f153;
	mul.rn.f32 	%f155, %f154, %f149;
	mul.rn.f32 	%f156, %f155, %f148;
	sub.f32 	%f157, %f146, %f148;
	neg.f32 	%f158, %f148;
	add.f32 	%f159, %f157, %f157;
	fma.rn.f32 	%f160, %f158, %f146, %f159;
	mul.rn.f32 	%f161, %f119, %f160;
	add.f32 	%f162, %f156, %f148;
	sub.f32 	%f163, %f148, %f162;
	add.f32 	%f164, %f156, %f163;
	add.f32 	%f165, %f161, %f164;
	add.f32 	%f166, %f162, %f165;
	sub.f32 	%f167, %f162, %f166;
	add.f32 	%f168, %f165, %f167;
	mov.f32 	%f169, 0f3F317200;
	mul.rn.f32 	%f170, %f145, %f169;
	mov.f32 	%f171, 0f35BFBE8E;
	mul.rn.f32 	%f172, %f145, %f171;
	add.f32 	%f173, %f170, %f166;
	sub.f32 	%f174, %f170, %f173;
	add.f32 	%f175, %f166, %f174;
	add.f32 	%f176, %f168, %f175;
	add.f32 	%f177, %f172, %f176;
	add.f32 	%f178, %f173, %f177;
	sub.f32 	%f179, %f173, %f178;
	add.f32 	%f180, %f177, %f179;
	mul.rn.f32 	%f181, %f134, %f178;
	neg.f32 	%f182, %f181;
	fma.rn.f32 	%f183, %f134, %f178, %f182;
	fma.rn.f32 	%f184, %f134, %f180, %f183;
	mov.f32 	%f185, 0f00000000;
	fma.rn.f32 	%f186, %f185, %f178, %f184;
	add.rn.f32 	%f187, %f181, %f186;
	neg.f32 	%f188, %f187;
	add.rn.f32 	%f189, %f181, %f188;
	add.rn.f32 	%f190, %f189, %f186;
	mov.b32 	 %r49, %f187;
	setp.eq.s32	%p14, %r49, 1118925336;
	add.s32 	%r50, %r49, -1;
	mov.b32 	 %f191, %r50;
	add.f32 	%f192, %f190, 0f37000000;
	selp.f32	%f193, %f191, %f187, %p14;
	selp.f32	%f20, %f192, %f190, %p14;
	mul.f32 	%f194, %f193, 0f3FB8AA3B;
	cvt.rzi.f32.f32	%f195, %f194;
	mov.f32 	%f196, 0fBF317200;
	fma.rn.f32 	%f197, %f195, %f196, %f193;
	mov.f32 	%f198, 0fB5BFBE8E;
	fma.rn.f32 	%f199, %f195, %f198, %f197;
	mul.f32 	%f200, %f199, 0f3FB8AA3B;
	ex2.approx.ftz.f32 	%f201, %f200;
	add.f32 	%f202, %f195, 0f00000000;
	ex2.approx.f32 	%f203, %f202;
	mul.f32 	%f204, %f201, %f203;
	setp.lt.f32	%p15, %f193, 0fC2D20000;
	selp.f32	%f205, 0f00000000, %f204, %p15;
	setp.gt.f32	%p16, %f193, 0f42D20000;
	selp.f32	%f727, 0f7F800000, %f205, %p16;
	setp.eq.f32	%p17, %f727, 0f7F800000;
	@%p17 bra 	BB0_5;

	fma.rn.f32 	%f727, %f727, %f20, %f727;

BB0_5:
	mov.f32 	%f678, 0f40000000;
	cvt.rzi.f32.f32	%f677, %f678;
	add.f32 	%f676, %f677, %f677;
	mov.f32 	%f675, 0f40800000;
	sub.f32 	%f674, %f675, %f676;
	abs.f32 	%f673, %f674;
	setp.lt.f32	%p18, %f17, 0f00000000;
	setp.eq.f32	%p19, %f673, 0f3F800000;
	and.pred  	%p1, %p18, %p19;
	mov.b32 	 %r51, %f727;
	xor.b32  	%r52, %r51, -2147483648;
	mov.b32 	 %f206, %r52;
	selp.f32	%f729, %f206, %f727, %p1;
	setp.eq.f32	%p20, %f17, 0f00000000;
	@%p20 bra 	BB0_8;
	bra.uni 	BB0_6;

BB0_8:
	add.f32 	%f209, %f17, %f17;
	selp.f32	%f729, %f209, 0f00000000, %p19;
	bra.uni 	BB0_9;

BB0_6:
	setp.geu.f32	%p21, %f17, 0f00000000;
	@%p21 bra 	BB0_9;

	mov.f32 	%f723, 0f40800000;
	cvt.rzi.f32.f32	%f208, %f723;
	setp.neu.f32	%p22, %f208, 0f40800000;
	selp.f32	%f729, 0f7FFFFFFF, %f729, %p22;

BB0_9:
	abs.f32 	%f679, %f17;
	add.f32 	%f210, %f679, 0f40800000;
	mov.b32 	 %r53, %f210;
	setp.lt.s32	%p24, %r53, 2139095040;
	@%p24 bra 	BB0_14;

	abs.f32 	%f721, %f17;
	setp.gtu.f32	%p25, %f721, 0f7F800000;
	@%p25 bra 	BB0_13;
	bra.uni 	BB0_11;

BB0_13:
	add.f32 	%f729, %f17, 0f40800000;
	bra.uni 	BB0_14;

BB0_11:
	abs.f32 	%f722, %f17;
	setp.neu.f32	%p26, %f722, 0f7F800000;
	@%p26 bra 	BB0_14;

	selp.f32	%f729, 0fFF800000, 0f7F800000, %p1;

BB0_14:
	sub.f32 	%f685, %f11, %f12;
	mul.f32 	%f684, %f685, %f128;
	sub.f32 	%f683, %f7, %f8;
	mul.f32 	%f682, %f683, %f128;
	sub.f32 	%f681, %f9, %f10;
	mul.f32 	%f680, %f681, %f128;
	mov.f32 	%f735, 0f3F800000;
	sub.f32 	%f212, %f735, %f729;
	setp.eq.f32	%p27, %f17, 0f3F800000;
	selp.f32	%f213, 0f00000000, %f212, %p27;
	cvt.sat.f32.f32	%f214, %f213;
	fma.rn.f32 	%f215, %f16, %f16, 0f3F800000;
	div.rn.f32 	%f216, %f214, %f215;
	mul.f32 	%f217, %f725, %f680;
	fma.rn.f32 	%f218, %f724, %f682, %f217;
	fma.rn.f32 	%f219, %f726, %f684, %f218;
	ld.global.u32 	%r54, [ignoreNormal];
	setp.eq.s32	%p28, %r54, 0;
	selp.f32	%f220, %f219, 0f3F800000, %p28;
	cvt.sat.f32.f32	%f221, %f220;
	mul.f32 	%f31, %f216, %f221;
	setp.lt.f32	%p29, %f31, 0f3727C5AC;
	@%p29 bra 	BB0_75;
	bra.uni 	BB0_15;

BB0_75:
	ld.global.u32 	%r158, [imageEnabled];
	and.b32  	%r119, %r158, 1;
	setp.eq.b32	%p102, %r119, 1;
	@!%p102 bra 	BB0_77;
	bra.uni 	BB0_76;

BB0_76:
	cvt.u64.u32	%rd69, %r2;
	cvt.u64.u32	%rd70, %r3;
	mov.u64 	%rd73, image;
	cvta.global.u64 	%rd68, %rd73;
	// inline asm
	call (%rd67), _rt_buffer_get_64, (%rd68, %r24, %r25, %rd69, %rd70, %rd15, %rd15);
	// inline asm
	mov.u16 	%rs37, 1;
	mov.u16 	%rs38, 0;
	st.v4.u8 	[%rd67], {%rs38, %rs38, %rs38, %rs37};
	ld.global.u32 	%r158, [imageEnabled];

BB0_77:
	and.b32  	%r122, %r158, 8;
	setp.eq.s32	%p103, %r122, 0;
	@%p103 bra 	BB0_79;

	cvt.u64.u32	%rd76, %r2;
	cvt.u64.u32	%rd77, %r3;
	mov.u64 	%rd80, image_Mask;
	cvta.global.u64 	%rd75, %rd80;
	// inline asm
	call (%rd74), _rt_buffer_get_64, (%rd75, %r24, %r24, %rd76, %rd77, %rd15, %rd15);
	// inline asm
	mov.f32 	%f654, 0f00000000;
	cvt.rzi.u32.f32	%r125, %f654;
	cvt.u16.u32	%rs39, %r125;
	mov.u16 	%rs40, 255;
	st.v2.u8 	[%rd74], {%rs39, %rs40};
	ld.global.u32 	%r158, [imageEnabled];

BB0_79:
	and.b32  	%r126, %r158, 4;
	setp.eq.s32	%p104, %r126, 0;
	@%p104 bra 	BB0_83;

	ld.global.u32 	%r127, [additive];
	setp.eq.s32	%p105, %r127, 0;
	cvt.u64.u32	%rd6, %r2;
	cvt.u64.u32	%rd7, %r3;
	mov.f32 	%f655, 0f3F800000;
	// inline asm
	{  cvt.rn.f16.f32 %rs41, %f655;}

	// inline asm
	@%p105 bra 	BB0_82;

	mov.u64 	%rd93, image_HDR;
	cvta.global.u64 	%rd82, %rd93;
	mov.u32 	%r131, 8;
	// inline asm
	call (%rd81), _rt_buffer_get_64, (%rd82, %r24, %r131, %rd6, %rd7, %rd15, %rd15);
	// inline asm
	ld.v4.u16 	{%rs48, %rs49, %rs50, %rs51}, [%rd81];
	// inline asm
	{  cvt.f32.f16 %f656, %rs48;}

	// inline asm
	// inline asm
	{  cvt.f32.f16 %f657, %rs49;}

	// inline asm
	// inline asm
	{  cvt.f32.f16 %f658, %rs50;}

	// inline asm
	// inline asm
	call (%rd87), _rt_buffer_get_64, (%rd82, %r24, %r131, %rd6, %rd7, %rd15, %rd15);
	// inline asm
	add.f32 	%f659, %f656, 0f00000000;
	add.f32 	%f660, %f657, 0f00000000;
	add.f32 	%f661, %f658, 0f00000000;
	// inline asm
	{  cvt.rn.f16.f32 %rs47, %f661;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs46, %f660;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs45, %f659;}

	// inline asm
	st.v4.u16 	[%rd87], {%rs45, %rs46, %rs47, %rs41};
	bra.uni 	BB0_83;

BB0_15:
	mov.f32 	%f733, 0f00000000;
	mul.f32 	%f223, %f8, 0f3456BF95;
	abs.f32 	%f224, %f724;
	div.rn.f32 	%f225, %f223, %f224;
	abs.f32 	%f226, %f725;
	mul.f32 	%f227, %f10, 0f3456BF95;
	div.rn.f32 	%f228, %f227, %f226;
	abs.f32 	%f229, %f726;
	mul.f32 	%f230, %f12, 0f3456BF95;
	div.rn.f32 	%f231, %f230, %f229;
	abs.f32 	%f232, %f225;
	abs.f32 	%f233, %f228;
	abs.f32 	%f234, %f231;
	mov.f32 	%f235, 0f38D1B717;
	max.f32 	%f236, %f232, %f235;
	max.f32 	%f237, %f233, %f235;
	max.f32 	%f238, %f234, %f235;
	fma.rn.f32 	%f32, %f724, %f236, %f8;
	fma.rn.f32 	%f33, %f725, %f237, %f10;
	fma.rn.f32 	%f34, %f726, %f238, %f12;
	ld.global.u32 	%r154, [samples];
	setp.lt.s32	%p30, %r154, 1;
	@%p30 bra 	BB0_18;

	mul.f32 	%f240, %f32, 0f3456BF95;
	abs.f32 	%f241, %f240;
	mul.f32 	%f242, %f33, 0f3456BF95;
	abs.f32 	%f243, %f242;
	mul.f32 	%f244, %f34, 0f3456BF95;
	abs.f32 	%f245, %f244;
	max.f32 	%f246, %f241, %f243;
	max.f32 	%f247, %f246, %f245;
	max.f32 	%f35, %f247, %f235;
	add.u64 	%rd24, %SP, 0;
	cvta.to.local.u64 	%rd2, %rd24;
	mov.f32 	%f733, 0f00000000;
	mov.u32 	%r153, 0;
	mov.f32 	%f730, %f11;
	mov.f32 	%f731, %f9;
	mov.f32 	%f732, %f7;
	bra.uni 	BB0_17;

BB0_74:
	ld.global.f32 	%f732, [lightPos];
	ld.global.f32 	%f731, [lightPos+4];
	ld.global.f32 	%f730, [lightPos+8];

BB0_17:
	cvt.rn.f32.s32	%f257, %r153;
	mul.f32 	%f258, %f257, 0f3DD32618;
	cvt.rmi.f32.f32	%f259, %f258;
	sub.f32 	%f260, %f258, %f259;
	mul.f32 	%f261, %f257, 0f3DD2F1AA;
	cvt.rmi.f32.f32	%f262, %f261;
	sub.f32 	%f263, %f261, %f262;
	mul.f32 	%f264, %f257, 0f3DC74539;
	cvt.rmi.f32.f32	%f265, %f264;
	sub.f32 	%f266, %f264, %f265;
	add.f32 	%f267, %f263, 0f4199851F;
	add.f32 	%f268, %f266, 0f4199851F;
	add.f32 	%f269, %f260, 0f4199851F;
	mul.f32 	%f270, %f263, %f268;
	fma.rn.f32 	%f271, %f260, %f267, %f270;
	fma.rn.f32 	%f272, %f269, %f266, %f271;
	add.f32 	%f273, %f260, %f272;
	add.f32 	%f274, %f263, %f272;
	add.f32 	%f275, %f266, %f272;
	add.f32 	%f276, %f273, %f274;
	mul.f32 	%f277, %f275, %f276;
	cvt.rmi.f32.f32	%f278, %f277;
	sub.f32 	%f279, %f277, %f278;
	add.f32 	%f280, %f273, %f275;
	mul.f32 	%f281, %f274, %f280;
	cvt.rmi.f32.f32	%f282, %f281;
	sub.f32 	%f283, %f281, %f282;
	add.f32 	%f284, %f274, %f275;
	mul.f32 	%f285, %f273, %f284;
	cvt.rmi.f32.f32	%f286, %f285;
	sub.f32 	%f287, %f285, %f286;
	fma.rn.f32 	%f288, %f279, 0f40000000, 0fBF800000;
	fma.rn.f32 	%f289, %f283, 0f40000000, 0fBF800000;
	fma.rn.f32 	%f290, %f287, 0f40000000, 0fBF800000;
	ld.global.f32 	%f291, [lightRadius];
	fma.rn.f32 	%f292, %f291, %f288, %f732;
	fma.rn.f32 	%f293, %f291, %f289, %f731;
	fma.rn.f32 	%f294, %f291, %f290, %f730;
	sub.f32 	%f295, %f292, %f8;
	sub.f32 	%f296, %f293, %f10;
	sub.f32 	%f297, %f294, %f12;
	mul.f32 	%f298, %f296, %f296;
	fma.rn.f32 	%f299, %f295, %f295, %f298;
	fma.rn.f32 	%f300, %f297, %f297, %f299;
	sqrt.rn.f32 	%f256, %f300;
	rcp.rn.f32 	%f301, %f256;
	mul.f32 	%f252, %f301, %f295;
	mul.f32 	%f253, %f301, %f296;
	mul.f32 	%f254, %f301, %f297;
	mov.u32 	%r59, 1065353216;
	st.local.u32 	[%rd2], %r59;
	ld.global.u32 	%r56, [root];
	mov.u32 	%r57, 1;
	// inline asm
	call _rt_trace_64, (%r56, %f32, %f33, %f34, %f252, %f253, %f254, %r57, %f35, %f256, %rd24, %r25);
	// inline asm
	ld.local.f32 	%f302, [%rd2];
	add.f32 	%f733, %f733, %f302;
	ld.global.u32 	%r154, [samples];
	add.s32 	%r153, %r153, 1;
	setp.lt.s32	%p31, %r153, %r154;
	@%p31 bra 	BB0_74;

BB0_18:
	setp.eq.s32	%p32, %r154, 0;
	@%p32 bra 	BB0_20;

	cvt.rn.f32.s32	%f304, %r154;
	div.rn.f32 	%f735, %f733, %f304;

BB0_20:
	ld.global.f32 	%f305, [lightColor];
	mul.f32 	%f306, %f31, %f735;
	mul.f32 	%f44, %f305, %f306;
	ld.global.f32 	%f307, [lightColor+4];
	mul.f32 	%f45, %f306, %f307;
	ld.global.f32 	%f308, [lightColor+8];
	mul.f32 	%f46, %f306, %f308;
	ld.global.u32 	%r156, [imageEnabled];
	and.b32  	%r60, %r156, 8;
	setp.eq.s32	%p33, %r60, 0;
	@%p33 bra 	BB0_33;

	mov.f32 	%f693, 0fB5BFBE8E;
	mov.f32 	%f692, 0fBF317200;
	mov.f32 	%f691, 0f35BFBE8E;
	mov.f32 	%f690, 0f3F317200;
	mov.f32 	%f689, 0f3DAAAABD;
	mov.f32 	%f688, 0f3C4CAF63;
	mov.f32 	%f687, 0f3B18F0FE;
	cvt.u64.u32	%rd28, %r2;
	cvt.u64.u32	%rd29, %r3;
	mov.u64 	%rd32, image_Mask;
	cvta.global.u64 	%rd27, %rd32;
	// inline asm
	call (%rd26), _rt_buffer_get_64, (%rd27, %r24, %r24, %rd28, %rd29, %rd15, %rd15);
	// inline asm
	mov.f32 	%f311, 0f3E68BA2E;
	cvt.rzi.f32.f32	%f312, %f311;
	fma.rn.f32 	%f313, %f312, 0fC0000000, 0f3EE8BA2E;
	abs.f32 	%f47, %f313;
	abs.f32 	%f48, %f735;
	setp.lt.f32	%p34, %f48, 0f00800000;
	mul.f32 	%f314, %f48, 0f4B800000;
	selp.f32	%f315, 0fC3170000, 0fC2FE0000, %p34;
	selp.f32	%f316, %f314, %f48, %p34;
	mov.b32 	 %r63, %f316;
	and.b32  	%r64, %r63, 8388607;
	or.b32  	%r65, %r64, 1065353216;
	mov.b32 	 %f317, %r65;
	shr.u32 	%r66, %r63, 23;
	cvt.rn.f32.u32	%f318, %r66;
	add.f32 	%f319, %f315, %f318;
	setp.gt.f32	%p35, %f317, 0f3FB504F3;
	mul.f32 	%f320, %f317, 0f3F000000;
	add.f32 	%f321, %f319, 0f3F800000;
	selp.f32	%f322, %f320, %f317, %p35;
	selp.f32	%f323, %f321, %f319, %p35;
	add.f32 	%f324, %f322, 0fBF800000;
	add.f32 	%f310, %f322, 0f3F800000;
	// inline asm
	rcp.approx.ftz.f32 %f309,%f310;
	// inline asm
	add.f32 	%f325, %f324, %f324;
	mul.f32 	%f326, %f309, %f325;
	mul.f32 	%f327, %f326, %f326;
	fma.rn.f32 	%f330, %f687, %f327, %f688;
	fma.rn.f32 	%f332, %f330, %f327, %f689;
	mul.rn.f32 	%f333, %f332, %f327;
	mul.rn.f32 	%f334, %f333, %f326;
	sub.f32 	%f335, %f324, %f326;
	neg.f32 	%f336, %f326;
	add.f32 	%f337, %f335, %f335;
	fma.rn.f32 	%f338, %f336, %f324, %f337;
	mul.rn.f32 	%f339, %f309, %f338;
	add.f32 	%f340, %f334, %f326;
	sub.f32 	%f341, %f326, %f340;
	add.f32 	%f342, %f334, %f341;
	add.f32 	%f343, %f339, %f342;
	add.f32 	%f344, %f340, %f343;
	sub.f32 	%f345, %f340, %f344;
	add.f32 	%f346, %f343, %f345;
	mul.rn.f32 	%f348, %f323, %f690;
	mul.rn.f32 	%f350, %f323, %f691;
	add.f32 	%f351, %f348, %f344;
	sub.f32 	%f352, %f348, %f351;
	add.f32 	%f353, %f344, %f352;
	add.f32 	%f354, %f346, %f353;
	add.f32 	%f355, %f350, %f354;
	add.f32 	%f356, %f351, %f355;
	sub.f32 	%f357, %f351, %f356;
	add.f32 	%f358, %f355, %f357;
	mov.f32 	%f359, 0f3EE8BA2E;
	mul.rn.f32 	%f360, %f359, %f356;
	neg.f32 	%f361, %f360;
	fma.rn.f32 	%f362, %f359, %f356, %f361;
	fma.rn.f32 	%f363, %f359, %f358, %f362;
	mov.f32 	%f364, 0f00000000;
	fma.rn.f32 	%f365, %f364, %f356, %f363;
	add.rn.f32 	%f366, %f360, %f365;
	neg.f32 	%f367, %f366;
	add.rn.f32 	%f368, %f360, %f367;
	add.rn.f32 	%f369, %f368, %f365;
	mov.b32 	 %r67, %f366;
	setp.eq.s32	%p36, %r67, 1118925336;
	add.s32 	%r68, %r67, -1;
	mov.b32 	 %f370, %r68;
	add.f32 	%f371, %f369, 0f37000000;
	selp.f32	%f372, %f370, %f366, %p36;
	selp.f32	%f49, %f371, %f369, %p36;
	mul.f32 	%f373, %f372, 0f3FB8AA3B;
	cvt.rzi.f32.f32	%f374, %f373;
	fma.rn.f32 	%f376, %f374, %f692, %f372;
	fma.rn.f32 	%f378, %f374, %f693, %f376;
	mul.f32 	%f379, %f378, 0f3FB8AA3B;
	ex2.approx.ftz.f32 	%f380, %f379;
	add.f32 	%f381, %f374, 0f00000000;
	ex2.approx.f32 	%f382, %f381;
	mul.f32 	%f383, %f380, %f382;
	setp.lt.f32	%p37, %f372, 0fC2D20000;
	selp.f32	%f384, 0f00000000, %f383, %p37;
	setp.gt.f32	%p38, %f372, 0f42D20000;
	selp.f32	%f736, 0f7F800000, %f384, %p38;
	setp.eq.f32	%p39, %f736, 0f7F800000;
	@%p39 bra 	BB0_23;

	fma.rn.f32 	%f736, %f736, %f49, %f736;

BB0_23:
	setp.lt.f32	%p40, %f735, 0f00000000;
	setp.eq.f32	%p41, %f47, 0f3F800000;
	and.pred  	%p2, %p40, %p41;
	mov.b32 	 %r69, %f736;
	xor.b32  	%r70, %r69, -2147483648;
	mov.b32 	 %f385, %r70;
	selp.f32	%f738, %f385, %f736, %p2;
	setp.eq.f32	%p42, %f735, 0f00000000;
	@%p42 bra 	BB0_26;
	bra.uni 	BB0_24;

BB0_26:
	add.f32 	%f388, %f735, %f735;
	selp.f32	%f738, %f388, 0f00000000, %p41;
	bra.uni 	BB0_27;

BB0_92:
	mov.u64 	%rd141, image_HDR;
	cvta.global.u64 	%rd136, %rd141;
	mov.u32 	%r150, 8;
	// inline asm
	call (%rd135), _rt_buffer_get_64, (%rd136, %r24, %r150, %rd8, %rd9, %rd15, %rd15);
	// inline asm
	mov.f32 	%f672, 0f00000000;
	// inline asm
	{  cvt.rn.f16.f32 %rs71, %f672;}

	// inline asm
	mov.u16 	%rs72, 0;
	st.v4.u16 	[%rd135], {%rs71, %rs71, %rs71, %rs72};

BB0_93:
	ld.global.u8 	%rs73, [imageEnabled];
	and.b16  	%rs74, %rs73, 64;
	setp.eq.s16	%p111, %rs74, 0;
	@%p111 bra 	BB0_95;

	cvt.u64.u32	%rd144, %r2;
	cvt.u64.u32	%rd145, %r3;
	mov.u64 	%rd148, image_Dir;
	cvta.global.u64 	%rd143, %rd148;
	// inline asm
	call (%rd142), _rt_buffer_get_64, (%rd143, %r24, %r25, %rd144, %rd145, %rd15, %rd15);
	// inline asm
	mov.u16 	%rs75, 0;
	st.v4.u8 	[%rd142], {%rs75, %rs75, %rs75, %rs75};
	bra.uni 	BB0_95;

BB0_82:
	mov.u64 	%rd100, image_HDR;
	cvta.global.u64 	%rd95, %rd100;
	mov.u32 	%r133, 8;
	// inline asm
	call (%rd94), _rt_buffer_get_64, (%rd95, %r24, %r133, %rd6, %rd7, %rd15, %rd15);
	// inline asm
	mov.f32 	%f662, 0f00000000;
	// inline asm
	{  cvt.rn.f16.f32 %rs52, %f662;}

	// inline asm
	st.v4.u16 	[%rd94], {%rs52, %rs52, %rs52, %rs41};

BB0_83:
	ld.global.u8 	%rs53, [imageEnabled];
	and.b16  	%rs54, %rs53, 64;
	setp.eq.s16	%p106, %rs54, 0;
	@%p106 bra 	BB0_95;

	cvt.u64.u32	%rd103, %r2;
	cvt.u64.u32	%rd104, %r3;
	mov.u64 	%rd107, image_Dir;
	cvta.global.u64 	%rd102, %rd107;
	// inline asm
	call (%rd101), _rt_buffer_get_64, (%rd102, %r24, %r25, %rd103, %rd104, %rd15, %rd15);
	// inline asm
	mov.u16 	%rs55, 255;
	mov.u16 	%rs56, 0;
	st.v4.u8 	[%rd101], {%rs56, %rs56, %rs56, %rs55};
	bra.uni 	BB0_95;

BB0_24:
	setp.geu.f32	%p43, %f735, 0f00000000;
	@%p43 bra 	BB0_27;

	cvt.rzi.f32.f32	%f387, %f359;
	setp.neu.f32	%p44, %f387, 0f3EE8BA2E;
	selp.f32	%f738, 0f7FFFFFFF, %f738, %p44;

BB0_27:
	add.f32 	%f389, %f48, 0f3EE8BA2E;
	mov.b32 	 %r71, %f389;
	setp.lt.s32	%p46, %r71, 2139095040;
	@%p46 bra 	BB0_32;

	setp.gtu.f32	%p47, %f48, 0f7F800000;
	@%p47 bra 	BB0_31;
	bra.uni 	BB0_29;

BB0_31:
	add.f32 	%f738, %f735, 0f3EE8BA2E;
	bra.uni 	BB0_32;

BB0_29:
	setp.neu.f32	%p48, %f48, 0f7F800000;
	@%p48 bra 	BB0_32;

	selp.f32	%f738, 0fFF800000, 0f7F800000, %p2;

BB0_32:
	mul.f32 	%f390, %f738, 0f437F0000;
	setp.eq.f32	%p49, %f735, 0f3F800000;
	selp.f32	%f391, 0f437F0000, %f390, %p49;
	cvt.rzi.u32.f32	%r72, %f391;
	cvt.u16.u32	%rs11, %r72;
	mov.u16 	%rs12, 255;
	st.v2.u8 	[%rd26], {%rs11, %rs12};
	ld.global.u32 	%r156, [imageEnabled];

BB0_33:
	and.b32  	%r73, %r156, 1;
	setp.eq.b32	%p50, %r73, 1;
	@!%p50 bra 	BB0_68;
	bra.uni 	BB0_34;

BB0_34:
	mov.f32 	%f700, 0fB5BFBE8E;
	mov.f32 	%f699, 0fBF317200;
	mov.f32 	%f698, 0f35BFBE8E;
	mov.f32 	%f697, 0f3F317200;
	mov.f32 	%f696, 0f3DAAAABD;
	mov.f32 	%f695, 0f3C4CAF63;
	mov.f32 	%f694, 0f3B18F0FE;
	mov.f32 	%f394, 0f3E666666;
	cvt.rzi.f32.f32	%f395, %f394;
	fma.rn.f32 	%f396, %f395, 0fC0000000, 0f3EE66666;
	abs.f32 	%f60, %f396;
	abs.f32 	%f61, %f44;
	setp.lt.f32	%p51, %f61, 0f00800000;
	mul.f32 	%f397, %f61, 0f4B800000;
	selp.f32	%f398, 0fC3170000, 0fC2FE0000, %p51;
	selp.f32	%f399, %f397, %f61, %p51;
	mov.b32 	 %r74, %f399;
	and.b32  	%r75, %r74, 8388607;
	or.b32  	%r76, %r75, 1065353216;
	mov.b32 	 %f400, %r76;
	shr.u32 	%r77, %r74, 23;
	cvt.rn.f32.u32	%f401, %r77;
	add.f32 	%f402, %f398, %f401;
	setp.gt.f32	%p52, %f400, 0f3FB504F3;
	mul.f32 	%f403, %f400, 0f3F000000;
	add.f32 	%f404, %f402, 0f3F800000;
	selp.f32	%f405, %f403, %f400, %p52;
	selp.f32	%f406, %f404, %f402, %p52;
	add.f32 	%f407, %f405, 0fBF800000;
	add.f32 	%f393, %f405, 0f3F800000;
	// inline asm
	rcp.approx.ftz.f32 %f392,%f393;
	// inline asm
	add.f32 	%f408, %f407, %f407;
	mul.f32 	%f409, %f392, %f408;
	mul.f32 	%f410, %f409, %f409;
	fma.rn.f32 	%f413, %f694, %f410, %f695;
	fma.rn.f32 	%f415, %f413, %f410, %f696;
	mul.rn.f32 	%f416, %f415, %f410;
	mul.rn.f32 	%f417, %f416, %f409;
	sub.f32 	%f418, %f407, %f409;
	neg.f32 	%f419, %f409;
	add.f32 	%f420, %f418, %f418;
	fma.rn.f32 	%f421, %f419, %f407, %f420;
	mul.rn.f32 	%f422, %f392, %f421;
	add.f32 	%f423, %f417, %f409;
	sub.f32 	%f424, %f409, %f423;
	add.f32 	%f425, %f417, %f424;
	add.f32 	%f426, %f422, %f425;
	add.f32 	%f427, %f423, %f426;
	sub.f32 	%f428, %f423, %f427;
	add.f32 	%f429, %f426, %f428;
	mul.rn.f32 	%f431, %f406, %f697;
	mul.rn.f32 	%f433, %f406, %f698;
	add.f32 	%f434, %f431, %f427;
	sub.f32 	%f435, %f431, %f434;
	add.f32 	%f436, %f427, %f435;
	add.f32 	%f437, %f429, %f436;
	add.f32 	%f438, %f433, %f437;
	add.f32 	%f439, %f434, %f438;
	sub.f32 	%f440, %f434, %f439;
	add.f32 	%f441, %f438, %f440;
	mov.f32 	%f442, 0f3EE66666;
	mul.rn.f32 	%f443, %f442, %f439;
	neg.f32 	%f444, %f443;
	fma.rn.f32 	%f445, %f442, %f439, %f444;
	fma.rn.f32 	%f446, %f442, %f441, %f445;
	mov.f32 	%f447, 0f00000000;
	fma.rn.f32 	%f448, %f447, %f439, %f446;
	add.rn.f32 	%f449, %f443, %f448;
	neg.f32 	%f450, %f449;
	add.rn.f32 	%f451, %f443, %f450;
	add.rn.f32 	%f452, %f451, %f448;
	mov.b32 	 %r78, %f449;
	setp.eq.s32	%p53, %r78, 1118925336;
	add.s32 	%r79, %r78, -1;
	mov.b32 	 %f453, %r79;
	add.f32 	%f454, %f452, 0f37000000;
	selp.f32	%f455, %f453, %f449, %p53;
	selp.f32	%f62, %f454, %f452, %p53;
	mul.f32 	%f456, %f455, 0f3FB8AA3B;
	cvt.rzi.f32.f32	%f457, %f456;
	fma.rn.f32 	%f459, %f457, %f699, %f455;
	fma.rn.f32 	%f461, %f457, %f700, %f459;
	mul.f32 	%f462, %f461, 0f3FB8AA3B;
	ex2.approx.ftz.f32 	%f463, %f462;
	add.f32 	%f464, %f457, 0f00000000;
	ex2.approx.f32 	%f465, %f464;
	mul.f32 	%f466, %f463, %f465;
	setp.lt.f32	%p54, %f455, 0fC2D20000;
	selp.f32	%f467, 0f00000000, %f466, %p54;
	setp.gt.f32	%p55, %f455, 0f42D20000;
	selp.f32	%f739, 0f7F800000, %f467, %p55;
	setp.eq.f32	%p56, %f739, 0f7F800000;
	@%p56 bra 	BB0_36;

	fma.rn.f32 	%f739, %f739, %f62, %f739;

BB0_36:
	setp.lt.f32	%p57, %f44, 0f00000000;
	setp.eq.f32	%p58, %f60, 0f3F800000;
	and.pred  	%p3, %p57, %p58;
	mov.b32 	 %r80, %f739;
	xor.b32  	%r81, %r80, -2147483648;
	mov.b32 	 %f468, %r81;
	selp.f32	%f741, %f468, %f739, %p3;
	setp.eq.f32	%p59, %f44, 0f00000000;
	@%p59 bra 	BB0_39;
	bra.uni 	BB0_37;

BB0_39:
	add.f32 	%f471, %f44, %f44;
	selp.f32	%f741, %f471, 0f00000000, %p58;
	bra.uni 	BB0_40;

BB0_37:
	setp.geu.f32	%p60, %f44, 0f00000000;
	@%p60 bra 	BB0_40;

	cvt.rzi.f32.f32	%f470, %f442;
	setp.neu.f32	%p61, %f470, 0f3EE66666;
	selp.f32	%f741, 0f7FFFFFFF, %f741, %p61;

BB0_40:
	add.f32 	%f472, %f61, 0f3EE66666;
	mov.b32 	 %r82, %f472;
	setp.lt.s32	%p63, %r82, 2139095040;
	@%p63 bra 	BB0_45;

	setp.gtu.f32	%p64, %f61, 0f7F800000;
	@%p64 bra 	BB0_44;
	bra.uni 	BB0_42;

BB0_44:
	add.f32 	%f741, %f44, 0f3EE66666;
	bra.uni 	BB0_45;

BB0_42:
	setp.neu.f32	%p65, %f61, 0f7F800000;
	@%p65 bra 	BB0_45;

	selp.f32	%f741, 0fFF800000, 0f7F800000, %p3;

BB0_45:
	mov.f32 	%f707, 0fB5BFBE8E;
	mov.f32 	%f706, 0fBF317200;
	mov.f32 	%f705, 0f35BFBE8E;
	mov.f32 	%f704, 0f3F317200;
	mov.f32 	%f703, 0f3DAAAABD;
	mov.f32 	%f702, 0f3C4CAF63;
	mov.f32 	%f701, 0f3B18F0FE;
	setp.eq.f32	%p66, %f44, 0f3F800000;
	selp.f32	%f73, 0f3F800000, %f741, %p66;
	abs.f32 	%f74, %f45;
	setp.lt.f32	%p67, %f74, 0f00800000;
	mul.f32 	%f475, %f74, 0f4B800000;
	selp.f32	%f476, 0fC3170000, 0fC2FE0000, %p67;
	selp.f32	%f477, %f475, %f74, %p67;
	mov.b32 	 %r83, %f477;
	and.b32  	%r84, %r83, 8388607;
	or.b32  	%r85, %r84, 1065353216;
	mov.b32 	 %f478, %r85;
	shr.u32 	%r86, %r83, 23;
	cvt.rn.f32.u32	%f479, %r86;
	add.f32 	%f480, %f476, %f479;
	setp.gt.f32	%p68, %f478, 0f3FB504F3;
	mul.f32 	%f481, %f478, 0f3F000000;
	add.f32 	%f482, %f480, 0f3F800000;
	selp.f32	%f483, %f481, %f478, %p68;
	selp.f32	%f484, %f482, %f480, %p68;
	add.f32 	%f485, %f483, 0fBF800000;
	add.f32 	%f474, %f483, 0f3F800000;
	// inline asm
	rcp.approx.ftz.f32 %f473,%f474;
	// inline asm
	add.f32 	%f486, %f485, %f485;
	mul.f32 	%f487, %f473, %f486;
	mul.f32 	%f488, %f487, %f487;
	fma.rn.f32 	%f491, %f701, %f488, %f702;
	fma.rn.f32 	%f493, %f491, %f488, %f703;
	mul.rn.f32 	%f494, %f493, %f488;
	mul.rn.f32 	%f495, %f494, %f487;
	sub.f32 	%f496, %f485, %f487;
	neg.f32 	%f497, %f487;
	add.f32 	%f498, %f496, %f496;
	fma.rn.f32 	%f499, %f497, %f485, %f498;
	mul.rn.f32 	%f500, %f473, %f499;
	add.f32 	%f501, %f495, %f487;
	sub.f32 	%f502, %f487, %f501;
	add.f32 	%f503, %f495, %f502;
	add.f32 	%f504, %f500, %f503;
	add.f32 	%f505, %f501, %f504;
	sub.f32 	%f506, %f501, %f505;
	add.f32 	%f507, %f504, %f506;
	mul.rn.f32 	%f509, %f484, %f704;
	mul.rn.f32 	%f511, %f484, %f705;
	add.f32 	%f512, %f509, %f505;
	sub.f32 	%f513, %f509, %f512;
	add.f32 	%f514, %f505, %f513;
	add.f32 	%f515, %f507, %f514;
	add.f32 	%f516, %f511, %f515;
	add.f32 	%f517, %f512, %f516;
	sub.f32 	%f518, %f512, %f517;
	add.f32 	%f519, %f516, %f518;
	mul.rn.f32 	%f521, %f442, %f517;
	neg.f32 	%f522, %f521;
	fma.rn.f32 	%f523, %f442, %f517, %f522;
	fma.rn.f32 	%f524, %f442, %f519, %f523;
	fma.rn.f32 	%f526, %f447, %f517, %f524;
	add.rn.f32 	%f527, %f521, %f526;
	neg.f32 	%f528, %f527;
	add.rn.f32 	%f529, %f521, %f528;
	add.rn.f32 	%f530, %f529, %f526;
	mov.b32 	 %r87, %f527;
	setp.eq.s32	%p69, %r87, 1118925336;
	add.s32 	%r88, %r87, -1;
	mov.b32 	 %f531, %r88;
	add.f32 	%f532, %f530, 0f37000000;
	selp.f32	%f533, %f531, %f527, %p69;
	selp.f32	%f75, %f532, %f530, %p69;
	mul.f32 	%f534, %f533, 0f3FB8AA3B;
	cvt.rzi.f32.f32	%f535, %f534;
	fma.rn.f32 	%f537, %f535, %f706, %f533;
	fma.rn.f32 	%f539, %f535, %f707, %f537;
	mul.f32 	%f540, %f539, 0f3FB8AA3B;
	ex2.approx.ftz.f32 	%f541, %f540;
	add.f32 	%f542, %f535, 0f00000000;
	ex2.approx.f32 	%f543, %f542;
	mul.f32 	%f544, %f541, %f543;
	setp.lt.f32	%p70, %f533, 0fC2D20000;
	selp.f32	%f545, 0f00000000, %f544, %p70;
	setp.gt.f32	%p71, %f533, 0f42D20000;
	selp.f32	%f742, 0f7F800000, %f545, %p71;
	setp.eq.f32	%p72, %f742, 0f7F800000;
	@%p72 bra 	BB0_47;

	fma.rn.f32 	%f742, %f742, %f75, %f742;

BB0_47:
	setp.lt.f32	%p73, %f45, 0f00000000;
	and.pred  	%p4, %p73, %p58;
	mov.b32 	 %r89, %f742;
	xor.b32  	%r90, %r89, -2147483648;
	mov.b32 	 %f546, %r90;
	selp.f32	%f744, %f546, %f742, %p4;
	setp.eq.f32	%p75, %f45, 0f00000000;
	@%p75 bra 	BB0_50;
	bra.uni 	BB0_48;

BB0_50:
	add.f32 	%f549, %f45, %f45;
	selp.f32	%f744, %f549, 0f00000000, %p58;
	bra.uni 	BB0_51;

BB0_48:
	setp.geu.f32	%p76, %f45, 0f00000000;
	@%p76 bra 	BB0_51;

	cvt.rzi.f32.f32	%f548, %f442;
	setp.neu.f32	%p77, %f548, 0f3EE66666;
	selp.f32	%f744, 0f7FFFFFFF, %f744, %p77;

BB0_51:
	add.f32 	%f550, %f74, 0f3EE66666;
	mov.b32 	 %r91, %f550;
	setp.lt.s32	%p79, %r91, 2139095040;
	@%p79 bra 	BB0_56;

	setp.gtu.f32	%p80, %f74, 0f7F800000;
	@%p80 bra 	BB0_55;
	bra.uni 	BB0_53;

BB0_55:
	add.f32 	%f744, %f45, 0f3EE66666;
	bra.uni 	BB0_56;

BB0_53:
	setp.neu.f32	%p81, %f74, 0f7F800000;
	@%p81 bra 	BB0_56;

	selp.f32	%f744, 0fFF800000, 0f7F800000, %p4;

BB0_56:
	mov.f32 	%f714, 0fB5BFBE8E;
	mov.f32 	%f713, 0fBF317200;
	mov.f32 	%f712, 0f35BFBE8E;
	mov.f32 	%f711, 0f3F317200;
	mov.f32 	%f710, 0f3DAAAABD;
	mov.f32 	%f709, 0f3C4CAF63;
	mov.f32 	%f708, 0f3B18F0FE;
	setp.eq.f32	%p82, %f45, 0f3F800000;
	selp.f32	%f86, 0f3F800000, %f744, %p82;
	abs.f32 	%f87, %f46;
	setp.lt.f32	%p83, %f87, 0f00800000;
	mul.f32 	%f553, %f87, 0f4B800000;
	selp.f32	%f554, 0fC3170000, 0fC2FE0000, %p83;
	selp.f32	%f555, %f553, %f87, %p83;
	mov.b32 	 %r92, %f555;
	and.b32  	%r93, %r92, 8388607;
	or.b32  	%r94, %r93, 1065353216;
	mov.b32 	 %f556, %r94;
	shr.u32 	%r95, %r92, 23;
	cvt.rn.f32.u32	%f557, %r95;
	add.f32 	%f558, %f554, %f557;
	setp.gt.f32	%p84, %f556, 0f3FB504F3;
	mul.f32 	%f559, %f556, 0f3F000000;
	add.f32 	%f560, %f558, 0f3F800000;
	selp.f32	%f561, %f559, %f556, %p84;
	selp.f32	%f562, %f560, %f558, %p84;
	add.f32 	%f563, %f561, 0fBF800000;
	add.f32 	%f552, %f561, 0f3F800000;
	// inline asm
	rcp.approx.ftz.f32 %f551,%f552;
	// inline asm
	add.f32 	%f564, %f563, %f563;
	mul.f32 	%f565, %f551, %f564;
	mul.f32 	%f566, %f565, %f565;
	fma.rn.f32 	%f569, %f708, %f566, %f709;
	fma.rn.f32 	%f571, %f569, %f566, %f710;
	mul.rn.f32 	%f572, %f571, %f566;
	mul.rn.f32 	%f573, %f572, %f565;
	sub.f32 	%f574, %f563, %f565;
	neg.f32 	%f575, %f565;
	add.f32 	%f576, %f574, %f574;
	fma.rn.f32 	%f577, %f575, %f563, %f576;
	mul.rn.f32 	%f578, %f551, %f577;
	add.f32 	%f579, %f573, %f565;
	sub.f32 	%f580, %f565, %f579;
	add.f32 	%f581, %f573, %f580;
	add.f32 	%f582, %f578, %f581;
	add.f32 	%f583, %f579, %f582;
	sub.f32 	%f584, %f579, %f583;
	add.f32 	%f585, %f582, %f584;
	mul.rn.f32 	%f587, %f562, %f711;
	mul.rn.f32 	%f589, %f562, %f712;
	add.f32 	%f590, %f587, %f583;
	sub.f32 	%f591, %f587, %f590;
	add.f32 	%f592, %f583, %f591;
	add.f32 	%f593, %f585, %f592;
	add.f32 	%f594, %f589, %f593;
	add.f32 	%f595, %f590, %f594;
	sub.f32 	%f596, %f590, %f595;
	add.f32 	%f597, %f594, %f596;
	mul.rn.f32 	%f599, %f442, %f595;
	neg.f32 	%f600, %f599;
	fma.rn.f32 	%f601, %f442, %f595, %f600;
	fma.rn.f32 	%f602, %f442, %f597, %f601;
	fma.rn.f32 	%f604, %f447, %f595, %f602;
	add.rn.f32 	%f605, %f599, %f604;
	neg.f32 	%f606, %f605;
	add.rn.f32 	%f607, %f599, %f606;
	add.rn.f32 	%f608, %f607, %f604;
	mov.b32 	 %r96, %f605;
	setp.eq.s32	%p85, %r96, 1118925336;
	add.s32 	%r97, %r96, -1;
	mov.b32 	 %f609, %r97;
	add.f32 	%f610, %f608, 0f37000000;
	selp.f32	%f611, %f609, %f605, %p85;
	selp.f32	%f88, %f610, %f608, %p85;
	mul.f32 	%f612, %f611, 0f3FB8AA3B;
	cvt.rzi.f32.f32	%f613, %f612;
	fma.rn.f32 	%f615, %f613, %f713, %f611;
	fma.rn.f32 	%f617, %f613, %f714, %f615;
	mul.f32 	%f618, %f617, 0f3FB8AA3B;
	ex2.approx.ftz.f32 	%f619, %f618;
	add.f32 	%f620, %f613, 0f00000000;
	ex2.approx.f32 	%f621, %f620;
	mul.f32 	%f622, %f619, %f621;
	setp.lt.f32	%p86, %f611, 0fC2D20000;
	selp.f32	%f623, 0f00000000, %f622, %p86;
	setp.gt.f32	%p87, %f611, 0f42D20000;
	selp.f32	%f745, 0f7F800000, %f623, %p87;
	setp.eq.f32	%p88, %f745, 0f7F800000;
	@%p88 bra 	BB0_58;

	fma.rn.f32 	%f745, %f745, %f88, %f745;

BB0_58:
	setp.lt.f32	%p89, %f46, 0f00000000;
	and.pred  	%p5, %p89, %p58;
	mov.b32 	 %r98, %f745;
	xor.b32  	%r99, %r98, -2147483648;
	mov.b32 	 %f624, %r99;
	selp.f32	%f747, %f624, %f745, %p5;
	setp.eq.f32	%p91, %f46, 0f00000000;
	@%p91 bra 	BB0_61;
	bra.uni 	BB0_59;

BB0_61:
	add.f32 	%f627, %f46, %f46;
	selp.f32	%f747, %f627, 0f00000000, %p58;
	bra.uni 	BB0_62;

BB0_59:
	setp.geu.f32	%p92, %f46, 0f00000000;
	@%p92 bra 	BB0_62;

	cvt.rzi.f32.f32	%f626, %f442;
	setp.neu.f32	%p93, %f626, 0f3EE66666;
	selp.f32	%f747, 0f7FFFFFFF, %f747, %p93;

BB0_62:
	add.f32 	%f628, %f87, 0f3EE66666;
	mov.b32 	 %r100, %f628;
	setp.lt.s32	%p95, %r100, 2139095040;
	@%p95 bra 	BB0_67;

	setp.gtu.f32	%p96, %f87, 0f7F800000;
	@%p96 bra 	BB0_66;
	bra.uni 	BB0_64;

BB0_66:
	add.f32 	%f747, %f46, 0f3EE66666;
	bra.uni 	BB0_67;

BB0_64:
	setp.neu.f32	%p97, %f87, 0f7F800000;
	@%p97 bra 	BB0_67;

	selp.f32	%f747, 0fFF800000, 0f7F800000, %p5;

BB0_67:
	setp.eq.f32	%p98, %f46, 0f3F800000;
	selp.f32	%f629, 0f3F800000, %f747, %p98;
	cvt.u64.u32	%rd36, %r3;
	cvt.u64.u32	%rd35, %r2;
	mov.u64 	%rd39, image;
	cvta.global.u64 	%rd34, %rd39;
	// inline asm
	call (%rd33), _rt_buffer_get_64, (%rd34, %r24, %r25, %rd35, %rd36, %rd15, %rd15);
	// inline asm
	cvt.sat.f32.f32	%f630, %f629;
	mul.f32 	%f631, %f630, 0f437FFD71;
	cvt.rzi.u32.f32	%r103, %f631;
	cvt.sat.f32.f32	%f632, %f86;
	mul.f32 	%f633, %f632, 0f437FFD71;
	cvt.rzi.u32.f32	%r104, %f633;
	cvt.sat.f32.f32	%f634, %f73;
	mul.f32 	%f635, %f634, 0f437FFD71;
	cvt.rzi.u32.f32	%r105, %f635;
	cvt.u16.u32	%rs13, %r103;
	cvt.u16.u32	%rs14, %r105;
	cvt.u16.u32	%rs15, %r104;
	mov.u16 	%rs16, 255;
	st.v4.u8 	[%rd33], {%rs13, %rs15, %rs14, %rs16};
	ld.global.u32 	%r156, [imageEnabled];

BB0_68:
	and.b32  	%r106, %r156, 4;
	setp.eq.s32	%p99, %r106, 0;
	@%p99 bra 	BB0_72;

	ld.global.u32 	%r107, [additive];
	setp.eq.s32	%p100, %r107, 0;
	cvt.u64.u32	%rd4, %r2;
	cvt.u64.u32	%rd5, %r3;
	mov.f32 	%f636, 0f3F800000;
	// inline asm
	{  cvt.rn.f16.f32 %rs17, %f636;}

	// inline asm
	@%p100 bra 	BB0_71;

	mov.u64 	%rd52, image_HDR;
	cvta.global.u64 	%rd41, %rd52;
	mov.u32 	%r111, 8;
	// inline asm
	call (%rd40), _rt_buffer_get_64, (%rd41, %r24, %r111, %rd4, %rd5, %rd15, %rd15);
	// inline asm
	ld.v4.u16 	{%rs24, %rs25, %rs26, %rs27}, [%rd40];
	// inline asm
	{  cvt.f32.f16 %f637, %rs24;}

	// inline asm
	// inline asm
	{  cvt.f32.f16 %f638, %rs25;}

	// inline asm
	// inline asm
	{  cvt.f32.f16 %f639, %rs26;}

	// inline asm
	// inline asm
	call (%rd46), _rt_buffer_get_64, (%rd41, %r24, %r111, %rd4, %rd5, %rd15, %rd15);
	// inline asm
	add.f32 	%f640, %f44, %f637;
	add.f32 	%f641, %f45, %f638;
	add.f32 	%f642, %f46, %f639;
	// inline asm
	{  cvt.rn.f16.f32 %rs23, %f642;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs22, %f641;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs21, %f640;}

	// inline asm
	st.v4.u16 	[%rd46], {%rs21, %rs22, %rs23, %rs17};
	bra.uni 	BB0_72;

BB0_71:
	mov.u64 	%rd59, image_HDR;
	cvta.global.u64 	%rd54, %rd59;
	mov.u32 	%r113, 8;
	// inline asm
	call (%rd53), _rt_buffer_get_64, (%rd54, %r24, %r113, %rd4, %rd5, %rd15, %rd15);
	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs30, %f46;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs29, %f45;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs28, %f44;}

	// inline asm
	st.v4.u16 	[%rd53], {%rs28, %rs29, %rs30, %rs17};

BB0_72:
	ld.global.u8 	%rs31, [imageEnabled];
	and.b16  	%rs32, %rs31, 64;
	setp.eq.s16	%p101, %rs32, 0;
	@%p101 bra 	BB0_95;

	sub.f32 	%f720, %f11, %f12;
	mul.f32 	%f719, %f720, %f128;
	sub.f32 	%f718, %f7, %f8;
	mul.f32 	%f717, %f718, %f128;
	sub.f32 	%f716, %f9, %f10;
	mul.f32 	%f715, %f716, %f128;
	cvt.u64.u32	%rd62, %r2;
	cvt.u64.u32	%rd63, %r3;
	mov.u64 	%rd66, image_Dir;
	cvta.global.u64 	%rd61, %rd66;
	// inline asm
	call (%rd60), _rt_buffer_get_64, (%rd61, %r24, %r25, %rd62, %rd63, %rd15, %rd15);
	// inline asm
	fma.rn.f32 	%f646, %f717, 0f3F000000, 0f3F000000;
	mul.f32 	%f647, %f646, 0f437F0000;
	cvt.rzi.u32.f32	%r116, %f647;
	fma.rn.f32 	%f648, %f715, 0f3F000000, 0f3F000000;
	mul.f32 	%f649, %f648, 0f437F0000;
	cvt.rzi.u32.f32	%r117, %f649;
	fma.rn.f32 	%f650, %f719, 0f3F000000, 0f3F000000;
	mul.f32 	%f651, %f650, 0f437F0000;
	cvt.rzi.u32.f32	%r118, %f651;
	cvt.u16.u32	%rs33, %r118;
	cvt.u16.u32	%rs34, %r117;
	cvt.u16.u32	%rs35, %r116;
	mov.u16 	%rs36, 255;
	st.v4.u8 	[%rd60], {%rs35, %rs34, %rs33, %rs36};

BB0_95:
	ret;
}


